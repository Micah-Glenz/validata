name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.0.0, etc.

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for changelog generation
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build
    
    - name: Extract version from tag
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Update version in setup.py
      run: |
        sed -i 's/version="[^"]*"/version="${{ steps.version.outputs.VERSION }}"/' setup.py
    
    - name: Build package
      run: python -m build
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## What's Changed in ${{ steps.version.outputs.TAG }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          echo "### Changes since $LAST_TAG:" >> $GITHUB_OUTPUT
          git log --pretty="- %s" $LAST_TAG..HEAD >> $GITHUB_OUTPUT
        else
          echo "### Initial Release" >> $GITHUB_OUTPUT
          echo "- Complete data validation and schema generation toolkit" >> $GITHUB_OUTPUT
          echo "- LLM-friendly APIs for easy integration" >> $GITHUB_OUTPUT
          echo "- Comprehensive test suite with 100% pass rate" >> $GITHUB_OUTPUT
          echo "- Enhanced metadata with performance tracking" >> $GITHUB_OUTPUT
        fi
        
        echo "" >> $GITHUB_OUTPUT
        echo "### Package Information" >> $GITHUB_OUTPUT
        echo "- **Installation**: \`pip install validata==${{ steps.version.outputs.VERSION }}\`" >> $GITHUB_OUTPUT
        echo "- **Documentation**: [README](https://github.com/Micah-Glenz/validata#readme)" >> $GITHUB_OUTPUT
        echo "- **PyPI**: [https://pypi.org/project/validata/${{ steps.version.outputs.VERSION }}](https://pypi.org/project/validata/${{ steps.version.outputs.VERSION }})" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.TAG }}
        name: Validata ${{ steps.version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        files: |
          dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}